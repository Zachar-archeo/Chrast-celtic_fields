p.mat = p_values,sig.level = 0.05, insig = "pch",
col = c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))(5)
corrplot(cor_matrix,
method = "number",
type = "upper",
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col = c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))(100)
corrplot(cor_matrix,
method = "number",
type = "upper",
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col = c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))(200)
# Load required libraries
library(tidyverse)
library(corrplot)
library(psych)
library(readxl)
# Load data (replace "data.csv" with your own data file name)
data <- read_excel ("D:/13_R_projects/Chrast/source data/data_AB.xls")%>% print.data.frame(digits=15)
# Calculate the correlation matrix
# List variables of the data you want to compute correlation on if necessary
cor_matrix <- cor(data[, 2:8])
# Calculate p-values for the correlation matrix
# List variables of the data you want to compute correlation on if necessary
p_values <- corr.test(data[, 2:8])$p
# Create a correlation plot
# Possible methods:"color", "square", "circle", "shade", "number"
corrplot(cor_matrix,
method = "number",
type = "upper",
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col = c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))(200)
corrplot(cor_matrix,
method = "number",
type = "upper",
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch")
corrplot(cor_matrix,
method = "number",
type = "upper",
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdBu', 10))
corrplot(cor_matrix,
method = "number",
type = "upper",
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black', tl.pos = 'd',
cl.pos = 'n',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
cl.pos = 'n',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 5))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
data <- read_excel ("D:/13_R_projects/Chrast/source data/xrfData.xls")
data <- read_excel ("D:/13_R_projects/Chrast/source data/xrfData.xlxs")
data <- read_excel ("D:/13_R_projects/Chrast/source data/xrfData.xlsx")
library(readxl)
xrfData <- read_excel("source data/xrfData.xlsx")
View(xrfData)
xrfData_long <- xrfData %>%
pivot_longer(cols = 7:13, names_to = "elements", values_to = "value")
View(xrfData_long)
xrfData_long %>%
ggplot(aes(x = sektor, y = value, fill = group_var)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=TRUE) +
labs(x = "sampling area",
y = "ppm",
fill = group_var) +
facet_wrap(~elements)
xrfData_long %>%
ggplot(aes(x = sektor, y = value, fill = group_var)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=TRUE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements)
xrfData_long %>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=TRUE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements)
theme_bw
xrfData_long %>%
drop_na()%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=TRUE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements)
theme_bw
xrfData_long %>%
drop_na()%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements)
theme_bw
xrfData_long <- xrfData %>%
pivot_longer(cols = 7:12, names_to = "elements", values_to = "value")
# Create a box plot for each group
xrfData_long %>%
drop_na()%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements)
theme_bw
xrfData_long %>%
drop_na()%>%
filter(sektor!=D)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
xrfData_long %>%
drop_na()%>%
filter(sektor!=D)
xrfData_long %>%
drop_na()%>%
filter(sektor!==D)
xrfData_long %>%
drop_na()%>%
filter(sektor=D)
xrfData_long %>%
drop_na()%>%
filter(sektor==D)
xrfData_long %>%
drop_na()%>%
filter(sektor!=D)%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements)
xrfData_long %>%
drop_na()%>%
filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements)
theme_bw
xrfData_long %>%
drop_na()%>%
filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements, scales = "free_y", independent = "y")
xrfData_long %>%
drop_na()%>%
filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements, scales = "free_y")
theme_bw
xrfData_long %>%
drop_na()%>%
#filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements, scales = "free_y")
theme_bw
xrfData_long %>%
drop_na()%>%
#filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=TRUE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements, scales = "free_y")
theme_bw
# Create a box plot for each group
xrfData_long %>%
drop_na()%>%
#filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements, scales = "free_y")
theme_bw
library(tidyverse)
library(corrplot)
library(psych)
library(readxl)
cor_matrix <- cor(xrfData[, 7:13])
p_values <- corr.test(data[, 7:13])$p
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 5))
View(data)
View(cor_matrix)
View(xrfData)
View(cor_matrix)
cor_matrix <- cor(data[, 7:13])
p_values <- corr.test(data[, 7:13])$p
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 5))
data2 <- read_excel ("D:/13_R_projects/Chrast/source data/data_AB.xls")
View(data2)
cor_matrix <- cor(data2[, 7:13])
cor_matrix <- cor(data2[, 2:7])
View(cor_matrix)
xrfData %>%
select (-1:6)%>%
cor_matrix <- cor(data2[, 2:7])
data3 <-xrfData %>% select -(1:6)
data3 <-xrfData %>% select (-(1:6))
cor_matrix <- cor(data3)
View(cor_matrix)
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 5))
cor_matrix <- cor(data3, row.names())
cor_matrix <- cor(data3, row.names(data3))
data3 <-xrfData %>% select (c(ID_Label,Ca,K,Mg,Mn,P,S,Sr/Rb))
data3 <-xrfData %>% select (c(ID_Label,Ca,K,Mg,Mn,P,S))
cor_matrix <- cor(data3[, 2:7])
cor_matrix <- cor(data3[, 2:7])
cor_matrix <- cor(data3[, 2:7])
View(cor_matrix)
data3 <-xrfData %>% select (c(ID_Label,Ca,K,Mg,Mn,P,S))%>% drop_na()
View(data3)
View(data2)
cor_matrix <- cor(data3[, 2:7])
p_values <- corr.test(data3[, 2:7])$p
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 5))
?? ggplot
?? geom_boxplot
?? coord_flip
glimpse (data3)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
glimpse (data3)
str(data3)
getwd()
citation()
‘citation("pkgname")’
citation("pkgname")
citation("movecost")
View(xrfData_long)
View(xrfData_long)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
# Load data (replace "data.csv" with your own data file name)
data <- read_excel ("D:/13_R_projects/Chrast/source data/xrfData.xlsx")
xrfData_long <- xrfData %>%
pivot_longer(cols = 7:12, names_to = "elements", values_to = "value")
# Create a box plot for each group
xrfData_long %>%
drop_na()%>%
#filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements, scales = "free_y")+
theme_bw +
xlab(NULL) +
# Add the N number to the x axis
scale_x_discrete(labels = c(paste0("N ", 1:5)))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
# Load data (replace "data.csv" with your own data file name)
data <- read_excel ("D:/13_R_projects/Chrast/source data/xrfData.xlsx")
xrfData_long <- xrfData %>%
pivot_longer(cols = 7:12, names_to = "elements", values_to = "value")
# Create a box plot for each group
xrfData_long %>%
drop_na()%>%
#filter(sektor!= as.factor("D"))%>%
ggplot(aes(x = sektor, y = value)) +
geom_boxplot(notch=FALSE) +
labs(x = "sampling area",
y = "ppm") +
facet_wrap(~elements, scales = "free_y")+
theme_bw () +
xlab(NULL) +
# Add the N number to the x axis
scale_x_discrete(labels = c(paste0("N ", 1:5)))
# Load required libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
# Load data (replace "data.csv" with your own data file name)
data <- read_excel("D:/13_R_projects/Chrast/source data/xrfData.xlsx")
# Add a column for sample numbers within each category
data <- data %>%
group_by(sektor) %>%
mutate(sample_number = row_number()) %>%
ungroup()
xrfData_long <- data %>%
pivot_longer(cols = 7:12, names_to = "elements", values_to = "value")
# Create a box plot for each group with sample numbers on the x-axis
xrfData_long %>%
drop_na() %>%
#filter(sektor != as.factor("D")) %>%
ggplot(aes(x = interaction(sektor, sample_number), y = value)) +
geom_boxplot(notch = FALSE) +
labs(x = "Sample",
y = "ppm") +
facet_wrap(~elements, scales = "free_y") +
theme_bw()
#coord_flip() # if you want to flip coordinates (axis)
# Load required libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
# Load data (replace "data.csv" with your own data file name)
data <- read_excel("D:/13_R_projects/Chrast/source data/xrfData.xlsx")
# Add a column for sample numbers within each category
data <- data %>%
group_by(sektor) %>%
mutate(sample_number = coloumn_number()) %>%
ungroup()
xrfData_long
xrfData_long$sektor
unique(xrfData_long$sektor)
sum(xrfData_long$sektor)
summary(xrfData_long$sektor)
xrfData_long %>%
count(as.factor(xrfData_long$sektor))
xrfData_long %>%
drop_na()%>% sum()
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
xrfData_long %>%
drop_na()%>% count(as.factor(xrfData_long$sektor))
xrfData_long %>%
drop_na()%>% count(as.factor(sektor))
glimpse(data3)
names (xrfData_long)
View(xrfData_long)
getwd()
struct (data)
glimpse (data)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
str(data)
View(data)
View(data)
data$ Y_JTSK
data4 <-
data %>%
mutate(across(where(is.numeric), ~ num(., digits = 3)))
View(data4)
View(data4)
format(num, digits = 5)
View(data)
View(data)
data5<-data %>% format(num, digits = 5)
data5<- data %>% format(num, digits = 5)
options(digits=14)
View(data)
?stat_summary
‘??stat_summary’
??stat_summary
View(xrfData_long)
View(xrfData)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
library(tidyverse)
str(data3)
getwd ()
unique (xrfData_long$sektor)
getwd ()
glimpse (data3)
library(tidyverse)
glimpse (data3)
str(data3)
library(tidyverse)
library(corrplot)
library(psych)
library(readxl)
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYBu', 6))
corrplot(cor_matrix,
method = "circle",
type = "upper",
addCoef.col = 'black',
tl.cex = 1.0,
p.mat = p_values,sig.level = 0.05, insig = "pch",
col =  COL2('RdYlBu', 6))
summary (cor_matrix)
view(cor_matrix)
str (cor_matrix)
View(xrfData_long)
xrfData_long
summary(xrfData_long$elements)
xrfData_long$elements
count (xrfData_long$elements)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
count (xrfData_long$elements)
count (xrfData_long$elements)
xrfData_long %>%
count (elements)
str (xrfData_long$elements)
